/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R           &kp T          &kp Y        &kp U          &kp I            &kp O    &kp P     &lt 5 BACKSLASH
&kp CAPSLOCK      &kp A  &kp S  &kp D         &kp F           &kp G          &kp H        &kp J          &kp K            &kp L    &kp SEMI  &lt 4 SINGLE_QUOTE
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C         &kp V           &kp B          &kp N        &kp M          &kp COMMA        &kp DOT  &kp FSLH  &kp LEFT_GUI
                                &kp LEFT_ALT  &kp LEFT_SHIFT  &lt 1 SPACE    &lt 2 ENTER  &kp BACKSPACE  &lt 3 LG(SPACE)
            >;
        };

        syntax_1 {
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH      &kp DOLLAR  &kp PERCENT    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans        &kp PIPE
&trans     &kp CARET        &kp AMPERSAND  &kp ASTERISK  &trans      &trans         &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PLUS              &kp MINUS              &kp COLON     &kp DOUBLE_QUOTES
&trans     &trans           &trans         &trans        &trans      &trans         &kp EQUAL         &kp UNDERSCORE     &kp LESS_THAN         &kp GREATER_THAN       &kp QUESTION  &kp TILDE
                                           &trans        &trans      &trans         &trans            &trans             &trans
            >;
        };

        syntax_2 {
            bindings = <
&kp LA(LC(SPACE))  &kp NUMBER_1       &kp NUMBER_2          &kp NUMBER_3          &kp NUMBER_4     &kp N5          &kp NUMBER_6  &kp N7    &kp N8        &kp N9     &kp N0  &trans
&trans             &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP  &trans          &kp LEFT      &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans             &trans             &trans                &trans                &bt BT_CLR       &out OUT_BLE    &trans        &trans    &trans        &trans     &trans  &trans
                                                            &trans                &trans           &trans          &trans        &trans    &trans
            >;
        };

        app {
            bindings = <
&kp LA(TAB)  &trans  &trans         &kp LA(LS(E))  &trans         &kp LA(LS(T))    &trans         &trans         &trans  &trans  &trans  &trans
&trans       &trans  &kp LA(LS(S))  &kp LA(LS(D))  &kp LA(LS(F))  &trans           &trans         &trans         &trans  &trans  &trans  &trans
&trans       &trans  &trans         &kp LA(LS(C))  &trans         &kp LA(LS(B))    &kp LA(LS(N))  &kp LA(LS(M))  &trans  &trans  &trans  &trans
                                    &trans         &trans         &kp LA(SPACE)    &kp LG(TAB)    &trans         &trans
            >;
        };

        browser {
            bindings = <
&trans  &trans                    &trans  &trans  &kp LG(R)                  &kp LG(T)    &trans                &trans                     &trans                    &kp LG(L)              &trans  &trans
&trans  &kp LA(LS(LEFT_BRACKET))  &trans  &trans  &kp LA(LS(RIGHT_BRACKET))  &trans       &kp LG(LEFT_BRACKET)  &kp LG(LS(RIGHT_BRACKET))  &kp LG(LS(LEFT_BRACKET))  &kp LG(RIGHT_BRACKET)  &trans  &trans
&trans  &trans                    &trans  &trans  &kp LC(LS(EQUAL))          &trans       &trans                &trans                     &trans                    &trans                 &trans  &trans
                                          &trans  &trans                     &trans       &kp LS(LG(NUMBER_2))  &kp LG(W)                  &trans
            >;
        };

        window_manager {
            bindings = <
&trans  &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)      &kp LA(NUMBER_4)      &kp LA(N5)           &kp LA(LS(NUMBER_1))  &kp LA(LS(NUMBER_2))  &kp LA(LS(NUMBER_3))  &kp LA(LS(NUMBER_4))  &kp LA(LS(N5))  &trans
&trans  &kp LC(LA(H))     &kp LC(LA(L))     &trans                &trans                &trans               &kp LA(H)             &kp LA(J)             &kp LA(K)             &kp LA(L)             &trans          &trans
&trans  &kp LS(LA(H))     &kp LS(LA(L))     &trans                &trans                &trans               &trans                &trans                &trans                &trans                &trans          &trans
                                            &kp LC(LA(NUMBER_1))  &kp LC(LA(NUMBER_2))  &kp LC(LA(LS(Y)))    &kp LA(LS(P))         &kp LA(P)             &trans
            >;
        };
    };
};
