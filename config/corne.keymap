/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        app_or_spotlight: app_or_spotlight {
            compatible = "zmk,behavior-tap-dance";
            label = "APP_OR_SPOTLIGHT";
            #binding-cells = <0>;
            bindings = <&mo 5>, <&kp LG(SPACE)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp LEFT_SHIFT  &kp Q  &kp W  &kp E             &kp R    &kp T          &kp Y        &kp U          &kp I         &kp O    &kp P     &lt 6 BACKSLASH
&lt 3 ESCAPE    &kp A  &kp S  &kp D             &kp F    &kp G          &kp H        &kp J          &kp K         &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LCTRL       &kp Z  &kp X  &kp C             &kp V    &kp B          &kp N        &kp M          &kp COMMA     &kp DOT  &kp FSLH  &app_or_spotlight
                              &kp LEFT_COMMAND  &kp TAB  &lt 2 SPACE    &lt 1 ENTER  &kp BACKSPACE  &kp LEFT_ALT
            >;
        };

        number {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans        &trans        &trans        &trans        &trans    &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans    &trans        &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans    &trans        &trans  &trans
            >;
        };

        special_syntax {
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH      &kp DOLLAR  &kp PERCENT    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans        &kp PIPE
&kp TILDE  &kp CARET        &kp AMPERSAND  &kp ASTERISK  &trans      &trans         &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PLUS              &kp MINUS              &kp COLON     &kp DOUBLE_QUOTES
&mo 4      &trans           &trans         &trans        &trans      &trans         &kp UNDERSCORE    &trans             &kp LESS_THAN         &kp GREATER_THAN       &kp QUESTION  &trans
                                           &trans        &trans      &trans         &kp EQUAL         &trans             &trans
            >;
        };

        utils {
            bindings = <
&trans             &kp F1             &kp F2                &kp F3                &kp F4           &kp F5    &kp F6    &kp F7    &kp F8        &kp F9     &kp F10  &trans
&trans             &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP  &trans    &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans   &trans
&kp LA(LC(SPACE))  &trans             &trans                &trans                &trans           &trans    &trans    &trans    &trans        &trans     &trans   &trans
                                                            &trans                &trans           &trans    &trans    &trans    &trans
            >;
        };

        browser {
            bindings = <
&trans  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &trans  &kp LG(R)  &kp LG(T)    &trans                    &trans                     &trans                    &kp LG(L)                  &trans  &trans
&trans  &trans                &trans                 &trans  &trans     &trans       &kp LA(LS(LEFT_BRACKET))  &kp LG(LS(RIGHT_BRACKET))  &kp LG(LS(LEFT_BRACKET))  &kp LA(LS(RIGHT_BRACKET))  &trans  &trans
&trans  &trans                &trans                 &trans  &trans     &trans       &trans                    &trans                     &trans                    &trans                     &trans  &trans
                                                     &trans  &trans     &trans       &trans                    &kp LG(W)                  &trans
            >;
        };

        app {
            bindings = <
&trans  &trans  &trans         &kp LA(LS(E))  &trans         &kp LA(LS(T))    &trans         &trans         &trans  &trans  &trans  &trans
&trans  &trans  &kp LA(LS(S))  &kp LA(LS(D))  &kp LA(LS(F))  &trans           &trans         &trans         &trans  &trans  &trans  &trans
&trans  &trans  &trans         &kp LA(LS(C))  &trans         &kp LA(LS(B))    &kp LA(LS(N))  &kp LA(LS(M))  &trans  &trans  &trans  &trans
                               &trans         &trans         &trans           &kp LA(TAB)    &trans         &trans
            >;
        };

        window_manager {
            bindings = <
&trans  &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)      &kp LA(N5)            &trans               &kp LA(LS(NUMBER_1))  &kp LA(LS(NUMBER_2))  &kp LA(LS(NUMBER_3))  &kp LA(LS(NUMBER_4))  &kp LA(LS(N5))  &trans
&trans  &kp LC(LA(H))     &kp LC(LA(L))     &trans                &trans                &trans               &kp LA(H)             &kp LA(J)             &kp LA(K)             &kp LA(L)             &trans          &trans
&trans  &kp LS(LA(H))     &kp LS(LA(L))     &trans                &trans                &trans               &trans                &trans                &trans                &trans                &trans          &trans
                                            &kp LC(LA(NUMBER_1))  &kp LC(LA(NUMBER_2))  &kp LC(LA(LS(Y)))    &kp LA(LS(P))         &kp LA(P)             &trans
            >;
        };
    };
};
